\documentclass[11pt,compress,t]{beamer}
\usetheme{eeecon}
\usepackage{color}
\usepackage{natbib}
\usepackage{Sweave}
%% pick one of the logos
%% default logo: generic uibk banner
\Logo{eeecon-title}
%% alternatives: eeecon research center logos
% \Logo[5mm]{eeecon-empec}
% \Logo[5mm]{eeecon-expec}
% \Logo[0mm]{eeecon-environec}

\begin{document}

%% information for the title page
\title{Heteroscedastic Censored and Truncated Regression for Weather Forecasts}
\author{\textit{Jakob W. Messner}, Georg J. Mayr, Achim Zeileis}
\URL{}

%% this sets the first PDF bookmark and triggers generation
%% of the title page
\section{Bookmark Title}


\subsection{Introduction}

\begin{frame}
  \frametitle{Weather forecasts}
  \textbf{Numerical Weather Prediction (NWP)}
  \begin{itemize}
    \item Observations $\rightarrow$ estimate current atmospheric state.
    \item Simulate atmospheric processes with numerical models.
  \end{itemize}
  \vspace{0.1cm}
  $\Rightarrow$ Compute future weather\pause
  \vspace{1cm}

  \textbf{Problems:}
  \begin{itemize}
    \item Few observations
    \item Observation errors
    \item Not perfectly known atmospheric processes
    \item Unresolved processes
  \end{itemize}
  \vspace{0.1cm}
  $\Rightarrow$ NWP errors

\end{frame}


\setkeys{Gin}{width=\textwidth}
\begin{frame}
\frametitle{NWP errors}
\begin{overprint}
\onslide<1>
<<echo=FALSE,fig=TRUE,width=6, height=4.5>>=
library("zoo")
library("crch")
load("RainIbk.rda")
load("RainAalb.rda")

uibkblue <- rgb(18, 50, 111, maxColorValue = 255)
uibkorange <- rgb(242, 146, 0, maxColorValue = 255)
RainIbk <- sqrt(RainIbk)
RainIbk$ensmean <- apply(RainIbk[,grep('^rainfc',names(RainIbk))], 1, mean)
RainIbk$enssd <- apply(RainIbk[,grep('^rainfc',names(RainIbk))], 1, sd)
#RainIbk$sqrtensmean <- apply(sqrt(RainIbk[,grep('^rainfc',names(RainIbk))]), 1, mean)
#RainIbk$sqrtenssd <- apply(sqrt(RainIbk[,grep('^rainfc',names(RainIbk))]), 1, sd)
Rain <- RainIbk
d <- RainIbk[as.POSIXct(rownames(RainIbk)) >= as.POSIXct("2013-10-01") & as.POSIXct(rownames(RainIbk)) < as.POSIXct("2013-11-01"),]

d <- as.data.frame(d^2)
ylim <- c(0, max(c(d$rain, d$ensmean + 1.5*d$enssd + 32)) )


d <- zoo(d, order.by = as.POSIXct(rownames(d)))


plot(d$rainfc.1, type = "l", ylim = ylim, col = uibkblue, lwd = 2,
  xlab = "Date", ylab = "precipitation [mm/3 days]", 
  main = "3 days accumulated precipitation")

legend("topright", lwd = 2, col = c(uibkblue), 
  bty = "n", legend = c("NWP forecast"))
@   

\onslide<2>
<<echo=FALSE,fig=TRUE,width=6, height=4.5>>=
plot(d$rainfc.1, type = "l", ylim = ylim, col = uibkblue, lwd = 2,
  xlab = "Date", ylab = "precipitation [mm/3 days]", 
  main = "3 days accumulated precipitation")
lines(d$rain,col = uibkorange, lwd = 2)

legend("topright", lwd = c(2,2), col = c(uibkblue, uibkorange), 
  bty = "n", legend = c("NWP forecast", "observation"))
#options(SweaveHooks=list(fig=function() par(mar=c(5,4,2,2))))
@   

\end{overprint}
\end{frame}
\begin{frame}
\frametitle{NWP errors}
\begin{overprint}
  \onslide<1>
<<echo=FALSE, results=hide,fig=TRUE,width=6,height=4.5>>=
mod1 <- lm(rain ~ ensmean, data = RainIbk)
scatter <- function(xlab = "NWP forecast", ylab = "observations") {
  par(mar=c(5,4.5,2,2))
  plot(rain ~ ensmean, RainIbk, pch = 19, col = grey(0.3, alpha = 0.1), ylim = c(0,12),
    xlim = c(0,12), xlab = xlab, ylab = ylab, 
    frame.plot = FALSE, axes = FALSE)
  axis(1, at = seq(0, 12, 2), labels = seq(0, 12, 2)^2)
  axis(2, at = seq(0, 12, 2), labels = seq(0, 12, 2)^2)
  abline(0,1, lty = 2, lwd = 0.5)
}
scatter()
@
  \onslide<2>
<<echo=FALSE,results=hide,fig=TRUE,width=6,height=4.5>>=
scatter()
abline(mod1, col = uibkorange, lwd = 2)
legend("topleft", col = c(uibkorange), lwd = 2, 
  bty = "n", legend = c("linear regression"))
@
\end{overprint}
\end{frame}

%\begin{frame}
%\frametitle{Distribution of precipitation}
%<<echo=FALSE,fig=TRUE, width=6, height=4.5, label = hist>>=
%hist(RainIbk$rain, breaks = 50, xlab = "precipitation [mm]", main = "", col = uibkblue)
%@
%\end{frame}

\begin{frame}
  \frametitle{Ensemble prediction}
  \textbf{NWP error sources:}
    \begin{itemize} 
      \item Initial conditions
      \item Model formulations\pause
    \end{itemize}
    \vspace{0.5cm}
    
    \textbf{Idea:}
    \begin{itemize}
      \item Perturbed initial conditions
      \item Different model formulations 
    \end{itemize}

    $\Rightarrow$ Compute different weather scenarios

%  \vspace{0.5cm}
%  \textbf{Problems:}
%  \begin{itemize}
%    \item Limited computer power $\rightarrow$ few members (approx. $6 - 51$)
%    \item Not all error sources considered
%  \end{itemize}

%  $\Rightarrow$ NWP forecast errors not perfectly represented.
\end{frame}




\begin{frame}
\frametitle{NWP errors}
\begin{overprint}
  \onslide<1>
<<echo=FALSE,fig=TRUE,width=6, height=4.5>>=
par(mar = c(5, 4, 4, 2))
plot(d$rain, type = "l", ylim = ylim, col = uibkorange, lwd = 2,
  xlab = "Date", ylab = "precipitation [mm/3 days]", 
  main = "3 days accumulated precipitation")
lines(d$rainfc.1, col = adjustcolor(uibkblue, alpha = 0.2), lwd = 2)
lines(d$rain, ylim = ylim, col = uibkorange, lwd = 2)

legend("topright", lwd = c(2,2), lty = c(1,1), 
  col = c(uibkorange, adjustcolor(uibkblue, alpha = 0.2)), 
  bty = "n", legend = c("observation",  "NWP forecast"))
@   
  \onslide<2>
<<echo=FALSE,fig=TRUE,width=6, height=4.5>>=
par(mar = c(5, 4, 4, 2))
plot(d$rain, type = "l", ylim = ylim, col = uibkorange, lwd = 2,
  xlab = "Date", ylab = "precipitation [mm/3 days]", 
  main = "3 days accumulated precipitation")

for(i in 2:12) lines(d[,i], lwd = 2, col = adjustcolor(uibkblue, alpha = 0.2))
lines(d$ensmean,col = uibkblue, lwd = 2)
lines(d$rain, ylim = ylim, col = uibkorange, lwd = 2)

legend("topright", lwd = c(2,2,2), col = c(uibkorange, adjustcolor(uibkblue, alpha = 0.2), uibkblue), bty = "n", legend = c("observation",  "ensemble forecasts", "ensemble mean"))
@   
\end{overprint}
\end{frame}


\begin{frame}
\frametitle{Statistical models}
\textbf{Challenges:}
\begin{itemize}
   \item utilize uncertainty information from ensemble forecasts
  \item limited (non-negative) response
\end{itemize}
\end{frame}

\subsection{Statistical models}
\begin{frame}
\frametitle{Heteroscedastic censored regression}
\begin{overprint}
  \onslide<1,2>
  \begin{eqnarray*}
    \mathit{rain}^{*} &\sim &\mathcal{N}(\mu, \sigma^2)\\
    \mu &=& \beta_0 + \beta_1 * \mathit{ensmean} \\
    \log(\sigma) &= &\gamma_0 + \gamma_1 * \mathit{enssd}
  \end{eqnarray*}
%  \onslide<2,3>
%  \begin{eqnarray*}
%    \sqrt{\mathit{rain}}^{*} &\sim &\mathcal{N}(\mu, \sigma^2)\\
%    \mu &=& \beta_0 + \beta_1 * \sqrt{\mathit{ensmean}} \\
%    \log(\sigma) &= &\gamma_0 + \gamma_1 * \sqrt{\mathit{enssd}}
%  \end{eqnarray*}   
\end{overprint}
\begin{overprint}
  \onslide<1>
    \vspace{1cm}
    \begin{itemize}
      \item $\mathit{rain}^*$: (latent) precipitation
      \item $\mathit{ensmean}$: ensemble mean forecast
      \item $\mathit{enssd}$: ensemble standard deviation
      \item $\beta_0, \beta_1, \gamma_0, \gamma_1$: regression coefficients
    \end{itemize}

  \onslide<2>
    \vspace{1cm}
    \textbf{Consider non-negativity:}  
    \begin{equation*}
	    \mathit{rain} =\begin{cases}
		    0 & \mathit{rain}^{*} \le 0 \\
		    \mathit{rain}^{*} & \mathit{rain}^{*} > 0
	    \end{cases}
    \end{equation*}
\end{overprint}
\end{frame}

\begin{frame}
\frametitle{Heteroscedastic censored regression}
\begin{overprint}
\onslide<1>
<<echo=FALSE,results=hide,fig=TRUE,width=6, height=4.5>>=
mod2 <- crch(rain ~ ensmean, data = RainIbk, dist = "gaussian", left = 0)
set.seed(1)
RainIbk2 <- data.frame(rain = rnorm(nrow(RainIbk), fitted(mod2, type = "location"), 
  fitted(mod2, type = "scale")), ensmean = RainIbk$ensmean)
scatter2 <- function(data) {
  par(mar = c(5, 4, 4, 2))
  plot(rain ~ ensmean, data, pch = 19, col = grey(0.3, alpha = 0.1),
    xlab = expression("ensmean"), ylim = c(-6,12),
    ylab = expression("rain*"), frame.plot = FALSE, axes = FALSE)
  axis(1, at = seq(0, 12, 2), labels = seq(0, 12, 2)^2)
  axis(2, at = seq(0, 12, 2), labels = seq(0, 12, 2)^2)
  abline(0,1, lty = 2, lwd = 0.5)
}
scatter2(RainIbk2)
@
\onslide<2>
<<echo=FALSE,results=hide,fig=TRUE,width=6, height=4.5>>=
scatter2(RainIbk2)
points(rain~ensmean, RainIbk2[RainIbk2$rain <= 0,], col = adjustcolor(uibkorange, 0.5))
@
\onslide<3>
<<echo=FALSE,results=hide,fig=TRUE,width=6, height=4.5>>=
RainIbk2$rain[RainIbk2$rain <=0] <- 0
scatter2(RainIbk2)
points(rain~ensmean, RainIbk2[RainIbk2$rain <= 0,], col = adjustcolor(uibkorange, 0.5))
@
\end{overprint}
\end{frame}


\begin{frame}[fragile]
\frametitle{Implementation in R}
\textbf{Model fitting}
\begin{itemize}
  \item \code{crch()} from package \pkg{crch}
  \item \code{glm()}-like interface \pause

  \item model specification via \code{formula} plus \code{data}
  \item two part formula, e.g., \code{y ~ x1 + x2 + x3 | z1 + z2} \pause

  \item log-likelihood maximized numerically via \code{optim()}
  \item distributions: Gaussian, logistic, student-t
  \item censored and truncated \pause

  \item methods: \code{summary(), coef(), residuals(), logLik(), predict(), \ldots} 
\end{itemize} 

\end{frame}

\begin{frame}[fragile]
\begin{overprint}
\onslide<1>
<<>>=
CRCH <- crch(rain ~ ensmean | enssd, data = Rain, left = 0)

@
\onslide<2>
<<eval=FALSE>>=
CRCH <- crch(rain ~ ensmean | enssd, data = Rain, left = 0)
summary(CRCH)
@
\onslide<3>
<<>>=
CRCH <- crch(rain ~ ensmean | enssd, data = Rain, left = 0)
summary(CRCH)
@
\end{overprint}
\end{frame}

%\begin{frame}[fragile]
%\frametitle{Omit ensemble standard deviation?}
%\textbf{Likelihood ratio test} (\code{lrtest()} from \pkg{lmtest})
%\begin{overprint}
%\onslide<1>
%<<eval=FALSE>>=
%CRCH <- crch(rain~ensmean|enssd, data = Rain, left = 0)
%CR   <- crch(rain~ensmean, data = Rain, left = 0)

%@
%\onslide<2>
%<<eval=FALSE>>=
%CRCH <- crch(rain~ensmean|enssd, data = Rain, left = 0)
%CR   <- crch(rain~ensmean, data = Rain, left = 0)
%lrtest(CRCH, CR)
%@
%\onslide<3>
%<<>>=
%CRCH <- crch(rain~ensmean|enssd, data = Rain, left = 0)
%CR   <- crch(rain~ensmean, data = Rain, left = 0)
%lrtest(CRCH, CR)
%@
%\end{overprint}
%\end{frame}

%\begin{frame}[fragile]
%\frametitle{Different distribution?}
%\begin{overprint}
%\onslide<1>
%<<eval=FALSE>>=
%CRCH  <- crch(rain~ensmean|enssd, data = Rain, left = 0)
%CRCH2 <- crch(rain~ensmean|enssd, data = Rain, left = 0, 
%  dist = "logistic")

%@
%\onslide<2>
%<<eval=FALSE>>=
%CRCH  <- crch(rain~ensmean|enssd, data = Rain, left = 0)
%CRCH2 <- crch(rain~ensmean|enssd, data = Rain, left = 0, 
%  dist = "logistic")
%AIC(CRCH, CRCH2)
%@
%\onslide<3>
%<<>>=
%CRCH  <- crch(rain~ensmean|enssd, data = Rain, left = 0)
%CRCH2 <- crch(rain~ensmean|enssd, data = Rain, left = 0, 
%  dist = "logistic")
%AIC(CRCH, CRCH2)

%@
%\onslide<4>
%<<>>=
%CRCH  <- crch(rain~ensmean|enssd, data = Rain, left = 0)
%CRCH2 <- crch(rain~ensmean|enssd, data = Rain, left = 0, 
%  dist = "logistic")
%AIC(CRCH, CRCH2)
%BIC(CRCH, CRCH2)
%@
%\end{overprint}
%\end{frame}


\begin{frame}
\frametitle{Censored regression}
\begin{overprint}
  \onslide<1>
<<echo=FALSE,results=hide,fig=TRUE,width = 6, height = 4.5>>=
mod1 <- lm(rain ~ ensmean, data = RainIbk)
mod2 <- crch(rain ~ ensmean, data = RainIbk, dist = "gaussian", left = 0)
scatter(xlab = "ensmean", ylab = "rain")
abline(mod1, col = uibkorange, lwd = 2, lty = 2)
legend("topleft", col = c(uibkorange), lwd = 2, lty = 2, 
  bty = "n", legend = c("linear regression"))
@
  \onslide<2>
<<echo=FALSE,results=hide,fig=TRUE,width = 6, height = 4.5>>=
scatter(xlab = "ensmean", ylab = "rain")
abline(mod1, col = uibkorange, lwd = 2, lty = 2)
abline(mod2, col = uibkorange, lwd = 3)
legend("topleft", col = c(uibkorange, uibkorange), lwd = c(2,3), lty = c(2, 1),
  bty = "n", legend = c("linear regression", "censored regression"))
@
\end{overprint}

\end{frame}


\begin{frame}
\frametitle{Predictions}
\begin{overprint}
  \onslide<1>
%<<echo=FALSE,fig=TRUE, width=6, height=4.5>>=
%addpdf <- function(point, scalefactor = 1, legend = TRUE, ...) {
%  loc <- predict(mod2, newdata = data.frame(sqrtensmean = point))
%  scale <- predict(mod2, newdata = data.frame(sqrtensmean = point), type = "scale") * scalefactor
%  lines(rep(point, 2), c(loc - 11, loc + 11), lty = 2, lwd = 0.5)
%  lines(c(point, point + 5), c(loc, loc), lty = 2)
%  lines(dcnorm(seq(0, loc+10, 0.1), loc, scale, left = 0)*10 + point, seq(0, loc+10, 0.1), col = uibkblue, lwd = 2, ...)
%  if(legend) legend("bottomright", lwd = 2, col = uibkorange, legend = expression(mu *" = "* beta[0] + beta[1] * bar(ens)), bty = "n")
%}
%par(mar=c(5,4.5,2,2))
%plot(sqrt(rain) ~ sqrtensmean, RainIbk, pch = 19, col = grey(0.3, alpha = 0.05),
%  xlab = expression(sqrt("NWP forecast")), 
%  ylab = expression(sqrt("observations")), frame.plot = FALSE)
%abline(mod2, col = uibkblue, lwd = 2)
%#legend("topleft", col = c(uibkorange, uibkblue), lwd = 2, 
%#  bty = "n", legend = c("linear regression", "censored regression"))
%addpdf(6.5, legend = FALSE)
%addpdf(6.5, 0.6, legend = FALSE, lty = 2)
%legend("topleft", lwd = 2, col = uibkblue, lty = c(1,2), legend = c("large ensemble spread", "small ensemble spread"), bty = "n")
%@

<<echo=FALSE,fig=TRUE, width=6, height=4.5>>=
censored <- crch(rain ~ ensmean | enssd, data = RainIbk, dist = "logistic", left = 0)
d <- sqrt(d)
date2 <- as.POSIXct("2013-10-16")
date1 <- as.POSIXct("2013-10-27")
location <- predict(censored, 
  newdata = d[index(d) == date1,], type = "location")
scale <- predict(censored, newdata = d[index(d) == date1,],
  type = "scale")
ensembleplot <- function() {
  par(mar = c(5, 4, 4, 2))
  plot(as.numeric((d[index(d) == date1, 2:12])), 
    rep(-0.003, 11), col = adjustcolor(uibkorange, alpha = 0.5), pch = 19, ylim = c(0, 0.3), 
    xlim = c(0, 10),xlab = expression("rain*"), 
    ylab = "predictive density", frame.plot = FALSE, axes = FALSE)
  axis(2)
  axis(1, at = seq(0, 12, 2), labels = seq(0, 12, 2)^2) 
}
ensembleplot()
legend("topright", col = c(uibkorange), lwd = 2,
  bty = "n", legend = c(date1))
@
  \onslide<2>
<<echo=FALSE,fig=TRUE, width=6, height=4.5>>=

ensembleplot()
legend("topright", col = c(uibkorange), lwd = 2,
  bty = "n", legend = c(date1))
lines(seq(-3, 10, 0.1), dlogis(seq(-3, 10, 0.1), location, scale), 
  col = uibkorange, lwd = 2)

@

  \onslide<3>
<<echo=FALSE,fig=TRUE, width=6, height=4.5>>=

ensembleplot()
lines(seq(-3, 10, 0.1), dlogis(seq(-3, 10, 0.1), location, scale), 
  col = uibkorange, lwd = 2)

location2 <- predict(censored, newdata = d[index(d) == date2,], 
  type = "location")
scale2 <- predict(censored, newdata = d[index(d) == date2,], type = "scale")
lines(seq(-3, 10, 0.1), dlogis(seq(-3, 10, 0.1), location2, scale2), 
  col = uibkblue, lwd = 2)

points(as.numeric((d[index(d) == date2, 2:12])), 
  rep(0.003, 11), col = adjustcolor(uibkblue, alpha = 0.2), pch = 19)


legend("topright", col = c(uibkorange, uibkblue), lwd = 2,
  bty = "n", legend = c(date1, date2))

@

\end{overprint}

\end{frame}


\begin{frame}[fragile]
\frametitle{UseR forecast}
<<echo=FALSE>>=
load("RainAalb.rda")
RainAalb$sqrtensmean <- apply(sqrt(RainAalb[,grep('^rainfc',names(RainAalb))]), 1, mean)
RainAalb$sqrtenssd <- apply(sqrt(RainAalb[,grep('^rainfc',names(RainAalb))]), 1, sd)
RainAalb <- subset(RainAalb, sqrtenssd > 0)
CRCH <- crch(sqrt(rain)~sqrtensmean|log(sqrtenssd), data = RainAalb, dist = "logistic")

user <- read.table("~/Dropbox/Transfer&backup/Transfer-RetoJakob/GEFS_gridpoint/GENS_00_aalborg.dat", header = TRUE)
user <- subset(user, varname=="apcpsfc")
user <- subset(user, step %in% seq(12, 78, 6))
user <- user[,4:14]
Raintoday <- data.frame(sqrtensmean = mean(sqrt(colSums(user))), 
  sqrtenssd = sd(sqrt(colSums(user))))
@
%<<>>=
%predict(CRCH, newdata = Raintoday, type = "location")
%predict(CRCH, newdata = Raintoday, type = "scale")
%@
\begin{overprint}
\onslide<1>
<<echo=FALSE,fig=TRUE, width=6, height=4.5>>=
x <- seq(-1, 10, 0.1)
location <- predict(CRCH, newdata = Raintoday, type = "location")
scale <- predict(CRCH, newdata = Raintoday, type = "scale")
#d <- dlogis((sqrt(x) - location)/scale)/2/sqrt(x)/scale
d <- dlogis((x-location)/scale)
plotpredict <- function() {
  par(mar = c(5, 4, 4, 2))
  plot(x, d, type = "l",
    xlim = c(0, 10), lwd = 2,
    xlab = "precipitation", ylab = "predictive density", 
    col = uibkblue, frame.plot = FALSE, axes = FALSE)
  points(as.numeric(sqrt(colSums(user))), 
    rep(-0.003, 11), col = adjustcolor(uibkblue, alpha = 0.2), pch = 19)
  axis(2)
  axis(1, at = seq(0, 10, 2), label = seq(0, 10, 2)^2) 
}
plotpredict()
legend("topright", col = c(uibkblue), lwd = 2,
  bty = "n", legend = "2015-07-01")
@
\onslide<2>
<<echo=FALSE,fig=TRUE, width=6, height=4.5>>=
plotpredict()
expect <- round(mean(qclogis(seq(0.01, 0.99, 0.01), location, scale, left = 0)^2), digits = 1)
legend("topright", bty = "n", xjust = 0, cex = 1.5, legend = 
  c(as.expression(bquote(E(rain)~"="~.(expect)~"mm")), "",
  as.expression(bquote(P(rain>0)~"="~.(round(plogis(0, location, scale,
  lower.tail = FALSE), digits = 3) * 100)~"%"))))
@
\end{overprint}
\end{frame}


\subsection{Summary}
\begin{frame}
\frametitle{Summary}
\textbf{Censored regression with conditional heteroscedasticity:}
\begin{itemize}
  \item effective usage of ensemble information
  \item non-negativity of precipitation considered
  \item model fitting with \code{crch()}
\end{itemize}\pause
\vspace{1cm}
\textbf{sunny weather for UseR!}
\vspace{0.3cm}
\begin{center}
  \includegraphics[width=0.3\textwidth]{sun.png}
\end{center}
\end{frame}





\begin{frame}
\frametitle{Bibliography}
\nocite{crch, Messner2014a, Messner2014b}
\bibliographystyle{ametsoc}
\bibliography{refs.bib}

\vspace{1.2cm}
jakob.messner@uibk.ac.at \hspace{3.2cm} \includegraphics[width=0.15\textwidth]{fwf-logo.jpg} \hspace{0.5cm} \includegraphics[width=0.07\textwidth]{uibk-logo.jpg} 
\end{frame}

%\begin{frame}
%\frametitle{\"OSG-Statistiktage forecast}
%\textbf{Accumulated precipitation 2014-09-10 to 2014-09-13}
%<<echo=FALSE,fig=TRUE, width=6, height=4.2>>=
%load("RainIbkOSG.rda")
%dmo$ensmean <- rowMeans(dmo[1:11])
%dmo$enssd <- sd(dmo[1:11])
%dmo$sqrtensmean <- rowMeans(sqrt(dmo[1:11]))
%dmo$sqrtenssd <- sd(sqrt(dmo[1:11]))
%location <- predict(censored, newdata = dmo, type = "location")
%scale <- predict(censored, newdata = dmo, type = "scale")
%x <- seq(0, 10, 0.1)
%#d <- dlogis((sqrt(x) - location)/scale)/2/sqrt(x)/scale
%d <- dlogis((x-location)/scale)
%plot(x, d, type = "l",
%  ylim = c(0, 0.3), xlim = c(0, 10), lwd = 2,
%  xlab = "precipitation", ylab = "predictive density", 
%  col = uibkblue, frame.plot = FALSE, axes = FALSE)
%axis(2)
%axis(1, at = seq(0, 10, 2), label = seq(0, 10, 2)^2) 

%legend("topright", bty = "n", xjust = 0, cex = 1.5, legend = 
%  c(as.expression(bquote(hat(y)~"="~.(round(location^2, digits = 0))~"mm")), "",
%  as.expression(bquote(P(y>0)~"="~.(round(pnorm(0, location, scale,
%  lower.tail = FALSE), digits = 3) * 100)~"%"))))
%@
%\end{frame}

\end{document}


