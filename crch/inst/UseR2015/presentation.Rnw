\documentclass[11pt,compress,t]{beamer}
\usetheme{eeecon}
\usepackage{color}
\usepackage{natbib}
\usepackage{Sweave}
%% pick one of the logos
%% default logo: generic uibk banner
\Logo{eeecon-title}
%% alternatives: eeecon research center logos
% \Logo[5mm]{eeecon-empec}
% \Logo[5mm]{eeecon-expec}
% \Logo[0mm]{eeecon-environec}

\begin{document}

%% information for the title page
\title{Heteroscedastic Censored and Truncated Regression for Weather Forecasts}
\author{\textit{Jakob W. Messner}, Georg J. Mayr, Achim Zeileis}
\URL{}

%% this sets the first PDF bookmark and triggers generation
%% of the title page
\section{Bookmark Title}


\subsection{Introduction}

\begin{frame}
  \frametitle{Weather forecasts}
  \textbf{Numerical Weather Prediction (NWP)}
  \begin{itemize}
    \item Observations $\rightarrow$ estimate current atmospheric state.
    \item Simulate atmospheric processes with numerical models.
  \end{itemize}
  \vspace{0.1cm}
  $\Rightarrow$ Compute future weather\pause
  \vspace{1cm}

  \textbf{Problems:}
  \begin{itemize}
    \item Few observations
    \item Observation errors
    \item Not perfectly known atmospheric processes
    \item Unresolved processes
  \end{itemize}
  \vspace{0.1cm}
  $\Rightarrow$ NWP errors

\end{frame}


\setkeys{Gin}{width=\textwidth}
\begin{frame}
\frametitle{NWP errors}
\begin{overprint}
\onslide<1>
<<echo=FALSE,fig=TRUE,width=6, height=4.5>>=
library("zoo")
library("crch")
load("RainIbk.rda")
cols <- c("#780244", "#6069A9", "#2AAD9D", "#BFC48A")
uibkblue <- rgb(18, 50, 111, maxColorValue = 255)
uibkorange <- rgb(242, 146, 0, maxColorValue = 255)
RainIbk$ensmean <- apply(RainIbk[,grep('^rainfc',names(RainIbk))], 1, mean)
RainIbk$enssd <- apply(RainIbk[,grep('^rainfc',names(RainIbk))], 1, sd)
RainIbk$sqrtensmean <- apply(sqrt(RainIbk[,grep('^rainfc',names(RainIbk))]), 1, mean)
RainIbk$sqrtenssd <- apply(sqrt(RainIbk[,grep('^rainfc',names(RainIbk))]), 1, sd)

d <- RainIbk[as.POSIXct(rownames(RainIbk)) >= as.POSIXct("2013-10-01") & as.POSIXct(rownames(RainIbk)) < as.POSIXct("2013-11-01"),]

ylim <- c(0, max(c(d$rain, d$ensmean + 1.5*d$enssd + 32)) )


d <- zoo(d, order.by = as.POSIXct(rownames(d)))

plot(d$rainfc.1, type = "l", ylim = ylim, col = uibkblue, lwd = 2,
  xlab = "Date", ylab = "precipitation [mm/3 days]", 
  main = "3 days accumulated precipitation")

legend("topright", lwd = 2, col = c(uibkblue), 
  bty = "n", legend = c("NWP forecast"))
@   

\onslide<2>
<<echo=FALSE,fig=TRUE,width=6, height=4.5>>=
plot(d$rainfc.1, type = "l", ylim = ylim, col = uibkblue, lwd = 2,
  xlab = "Date", ylab = "precipitation [mm/3 days]", 
  main = "3 days accumulated precipitation")
lines(d$rain,col = uibkorange, lwd = 2)

legend("topright", lwd = c(2,2), col = c(uibkblue, uibkorange), 
  bty = "n", legend = c("NWP forecast", "observation"))
options(SweaveHooks=list(fig=function() par(mar=c(5,4,2,2))))
@   

\end{overprint}
\end{frame}
\begin{frame}
\frametitle{NWP errors}
\begin{overprint}
  \onslide<1>
<<echo=FALSE, results=hide>>=
mod1 <- lm(rain ~ ensmean, data = RainIbk)
png("presentation-scatter1.png", width = 6, height = 4.5, units = "in", res = 300)
par(mar=c(5,4.5,2,2))
plot(rain ~ ensmean, RainIbk, pch = 19, col = grey(0.3, alpha = 0.1),
  xlab = "NWP forecast", ylab = "observations", frame.plot = FALSE)
abline(0,1, lty = 2, lwd = 0.5)
dev.off()
@
    \includegraphics[width=\textwidth]{presentation-scatter1.png}
  \onslide<2>
<<echo=FALSE,results=hide>>=
png("presentation-scatter2.png", width = 6, height = 4.5, units = "in", res = 300)
par(mar=c(5,4.5,2,2))
plot(rain ~ ensmean, RainIbk, pch = 19, col = grey(0.3, alpha = 0.1),
  xlab = "NWP forecast", ylab = "observations", frame.plot = FALSE)
abline(0,1, lty = 2, lwd = 0.5)
abline(mod1, col = uibkorange, lwd = 2)
legend("topleft", col = c(uibkorange), lwd = 2, 
  bty = "n", legend = c("linear regression"))
dev.off()
@
    \includegraphics[width=\textwidth]{presentation-scatter2.png}
\end{overprint}
\end{frame}

\begin{frame}
\frametitle{Distribution of precipitation}
<<echo=FALSE,fig=TRUE, width=6, height=4.5, label = hist>>=
hist(RainIbk$rain, breaks = 50, xlab = "precipitation [mm]", main = "", col = uibkblue)
@

\end{frame}

\begin{frame}
  \frametitle{Ensemble prediction}
  \textbf{NWP error sources:}
    \begin{itemize} 
      \item Initial conditions
      \item Model formulations\pause
    \end{itemize}
    \vspace{0.5cm}
    
    \textbf{Idea:}
    \begin{itemize}
      \item Perturbed initial conditions
      \item Different model formulations 
    \end{itemize}

    $\Rightarrow$ Compute different weather scenarios

%  \vspace{0.5cm}
%  \textbf{Problems:}
%  \begin{itemize}
%    \item Limited computer power $\rightarrow$ few members (approx. $6 - 51$)
%    \item Not all error sources considered
%  \end{itemize}

%  $\Rightarrow$ NWP forecast errors not perfectly represented.
\end{frame}




\begin{frame}
\frametitle{NWP errors}
\begin{overprint}
  \onslide<1>
<<echo=FALSE,fig=TRUE,width=6, height=4.5>>=
par(mar = c(5, 4, 4, 2))
plot(d$rain, type = "l", ylim = ylim, col = uibkorange, lwd = 2,
  xlab = "Date", ylab = "precipitation [mm/3 days]", 
  main = "3 days accumulated precipitation")
lines(d$rainfc.1, col = adjustcolor(uibkblue, alpha = 0.2), lwd = 2)
lines(d$rain, ylim = ylim, col = uibkorange, lwd = 2)

legend("topright", lwd = c(2,2), lty = c(1,1), 
  col = c(uibkorange, adjustcolor(uibkblue, alpha = 0.2)), 
  bty = "n", legend = c("observation",  "NWP forecast"))
@   
  \onslide<2>
<<echo=FALSE,fig=TRUE,width=6, height=4.5>>=
par(mar = c(5, 4, 4, 2))
plot(d$rain, type = "l", ylim = ylim, col = uibkorange, lwd = 2,
  xlab = "Date", ylab = "precipitation [mm/3 days]", 
  main = "3 days accumulated precipitation")

for(i in 2:12) lines(d[,i], lwd = 2, col = adjustcolor(uibkblue, alpha = 0.2))
lines(d$ensmean,col = uibkblue, lwd = 2)
lines(d$rain, ylim = ylim, col = uibkorange, lwd = 2)

legend("topright", lwd = c(2,2,2), col = c(uibkorange, adjustcolor(uibkblue, alpha = 0.2), uibkblue), bty = "n", legend = c("observation",  "ensemble forecasts", "ensemble mean"))
@   
\end{overprint}
\end{frame}


\begin{frame}
\frametitle{Statistical models}
\textbf{Challenges:}
\begin{itemize}
   \item utilize uncertainty information from ensemble forecasts
  \item limited (non-negative) response
\end{itemize}
\end{frame}

\subsection{Statistical models}
\begin{frame}
\frametitle<1>{Heteroscedastic regression}
\frametitle<2>{Censored regression}

\begin{eqnarray*}
  y^{*} &\sim &\mathcal{N}(\mu, \sigma^2)\\
  \mu &=& \mathbf{x}^\top \beta \\
  \log(\sigma) &= &\mathbf{z}^\top \gamma
\end{eqnarray*}
\begin{overprint}
  \onslide<1>
    \vspace{1cm}
    \begin{itemize}
      \item $y^*$: (Latent) response (e.g., precipitation, perhaps transformed)
      \item $\mathbf{x}$: Regressors for location 
        (e.g., ensemble mean forecast)
      \item $\mathbf{z}$: Regressors for scale 
        (e.g., ensemble standard deviation)
      \item $\mathbf{\beta}, \mathbf{\gamma}$: Regression coefficients
    \end{itemize}

  \onslide<2>
    \vspace{1cm}
    \textbf{Consider non-negativity:}  
    \begin{equation*}
	    y =\begin{cases}
		    0 & y^{*} \le 0 \\
		    y^{*} & y^{*} > 0
	    \end{cases}
    \end{equation*}
\end{overprint}
\end{frame}

\begin{frame}[fragile]
\frametitle{Implementation in R}
<<eval=FALSE>>=
CRCH <- crch(rain~ensmean|enssd, data = data, left = 0)
@
\begin{itemize}
  \item \code{crch()} from package \pkg{crch}
  \item \code{glm()}-like interface
  \item model specification via \code{formula} plus \code{data}
  \item two part formula, e.g., \code{y ~ x1 + x2 + x3 | z1 + z2}
  \item log-likelihood maximized numerically via \code{optim()}
  \item distributions: Gaussian, logistic, student-t
  \item censored and truncated
  \item methods: \code{summary(), coef(), residuals(), logLik(), predict(), \ldots} 
\end{itemize} 
\end{frame}

\begin{frame}[fragile]
\frametitle{Implementation in R}
<<eval=FALSE>>=
CRCH <- crch(rain~ensmean|enssd, data = data, left = 0)
CR <- crch(rain~ensmean, data = data, left = 0)

summary(CRCH)
lrtest(CRCH, CR)
AIC(CRCH, CR)
BIC(CRCH, CR)
@
\end{frame}

\begin{frame}
\frametitle{Censored regression}
\begin{overprint}
  \onslide<1>
<<echo=FALSE,results=hide>>=
mod1 <- lm(sqrt(rain) ~ sqrtensmean, data = RainIbk)
mod2 <- crch(sqrt(rain) ~ sqrtensmean, data = RainIbk, dist = "gaussian", left = 0)
png("presentation-scatter3.png", width = 6, height = 4.5, units = "in", res = 300)
par(mar=c(5,4.5,2,2))
plot(sqrt(rain) ~ sqrtensmean, RainIbk, pch = 19, col = grey(0.3, alpha = 0.1),
  xlab = expression(sqrt("NWP forecast")), 
  ylab = expression(sqrt("observations")), frame.plot = FALSE)
abline(0,1, lty = 2, lwd = 0.5)
abline(mod1, col = uibkorange, lwd = 2)
legend("topleft", col = c(uibkorange), lwd = 2, 
  bty = "n", legend = c("linear regression"))
dev.off()
@
    \includegraphics[width=\textwidth]{presentation-scatter3.png}
  \onslide<2>
<<echo=FALSE,results=hide>>=
png("presentation-scatter4.png", width = 6, height = 4.5, units = "in", res = 300)
par(mar=c(5,4.5,2,2))
plot(sqrt(rain) ~ sqrtensmean, RainIbk, pch = 19, col = grey(0.3, alpha = 0.1),
  xlab = expression(sqrt("NWP forecast")), 
  ylab = expression(sqrt("observations")), frame.plot = FALSE)
abline(0,1, lty = 2, lwd = 0.5)
abline(mod1, col = uibkorange, lwd = 2)
abline(mod2, col = uibkblue, lwd = 2)
legend("topleft", col = c(uibkorange, uibkblue), lwd = 2, 
  bty = "n", legend = c("linear regression", "censored regression"))
dev.off()
@
    \includegraphics[width=\textwidth]{presentation-scatter4.png}
\end{overprint}

\end{frame}


\begin{frame}
\frametitle{Censored regression}
\begin{overprint}
  \onslide<1>
<<echo=FALSE,fig=TRUE, width=6, height=4.5>>=
addpdf <- function(point, scalefactor = 1, legend = TRUE, ...) {
  loc <- predict(mod2, newdata = data.frame(sqrtensmean = point))
  scale <- predict(mod2, newdata = data.frame(sqrtensmean = point), type = "scale") * scalefactor
  lines(rep(point, 2), c(loc - 11, loc + 11), lty = 2, lwd = 0.5)
  lines(c(point, point + 5), c(loc, loc), lty = 2)
  lines(dcnorm(seq(0, loc+10, 0.1), loc, scale, left = 0)*10 + point, seq(0, loc+10, 0.1), col = uibkblue, lwd = 2, ...)
  if(legend) legend("bottomright", lwd = 2, col = uibkorange, legend = expression(mu *" = "* beta[0] + beta[1] * bar(ens)), bty = "n")
}
par(mar=c(5,4.5,2,2))
plot(sqrt(rain) ~ sqrtensmean, RainIbk, pch = 19, col = grey(0.3, alpha = 0.05),
  xlab = expression(sqrt("NWP forecast")), 
  ylab = expression(sqrt("observations")), frame.plot = FALSE)
abline(mod2, col = uibkblue, lwd = 2)
#legend("topleft", col = c(uibkorange, uibkblue), lwd = 2, 
#  bty = "n", legend = c("linear regression", "censored regression"))
addpdf(6.5, legend = FALSE)
addpdf(6.5, 0.6, legend = FALSE, lty = 2)
legend("topleft", lwd = 2, col = uibkblue, lty = c(1,2), legend = c("large ensemble spread", "small ensemble spread"), bty = "n")
@

%<<echo=FALSE,fig=TRUE, width=6, height=4.5>>=
%censored <- crch(sqrt(rain) ~ sqrtensmean | sqrtenssd, data = RainIbk, dist = "logistic", left = 0)
%date1 <- as.POSIXct("2013-10-16")
%date2 <- as.POSIXct("2013-10-27")
%location <- predict(censored, 
%  newdata = d[index(d) == date1,], type = "location")
%scale <- predict(censored, newdata = d[index(d) == date1,],
%  type = "scale")
%plot(as.numeric(sqrt(d[index(d) == date1, 2:12])), 
%  rep(0.003, 11), col = adjustcolor(uibkblue, alpha = 0.2), pch = 19, ylim = c(0, 0.3), 
%  xlim = c(-3, 10),xlab = expression(paste("y* (= ", sqrt("precipitation"), ")")), 
%  ylab = "predictive density", frame.plot = FALSE)

%legend("topright", col = c(uibkblue), lwd = 2,
%  bty = "n", legend = c(date1))

%@
  \onslide<2>
%<<echo=FALSE,fig=TRUE, width=6, height=4.5>>=

%plot(as.numeric(sqrt(d[index(d) == date1, 2:12])), 
%  rep(0.003, 11), col = adjustcolor(uibkblue, alpha = 0.2), pch = 19, ylim = c(0, 0.3), 
%  xlim = c(-3, 10),xlab = expression(paste("y* (= ", sqrt("precipitation"), ")")), 
%  ylab = "predictive density", frame.plot = FALSE)
%lines(seq(-3, 10, 0.1), dlogis(seq(-3, 10, 0.1), location, scale), 
%  col = uibkblue, lwd = 2)

%legend("topright", col = c(uibkblue), lwd = 2,
%  bty = "n", legend = c(date1))

%@

  \onslide<3>
%<<echo=FALSE,fig=TRUE, width=6, height=4.5>>=

%plot(as.numeric(sqrt(d[index(d) == date1, 2:12])), 
%  rep(0.003, 11), col = adjustcolor(uibkblue, alpha = 0.2), pch = 19, ylim = c(0, 0.3), 
%  xlim = c(-3, 10),xlab = expression(paste("y* (= ", sqrt("precipitation"), ")")), 
%  ylab = "predictive density", frame.plot = FALSE)
%lines(seq(-3, 10, 0.1), dlogis(seq(-3, 10, 0.1), location, scale), 
%  col = uibkblue, lwd = 2)

%location2 <- predict(censored, newdata = d[index(d) == date2,], 
%  type = "location")
%scale2 <- predict(censored, newdata = d[index(d) == date2,], type = "scale")
%lines(seq(-3, 10, 0.1), dlogis(seq(-3, 10, 0.1), location2, scale2), 
%  col = uibkorange, lwd = 2)

%points(as.numeric(sqrt(d[index(d) == date2, 2:12])), 
%  rep(-0.003, 11), col = adjustcolor(uibkorange, alpha = 0.5), pch = 19)


%legend("topright", col = c(uibkblue, uibkorange), lwd = 2,
%  bty = "n", legend = c(date1, date2))

%@

\end{overprint}

\end{frame}

%\begin{frame}
%\frametitle{Censored regression -- probabilistic forecast}
%\begin{overprint}
%  \onslide<1>
%<<echo=FALSE,fig=TRUE, width=6, height=4.5>>=
%plot(seq(-3, 10, 0.1), dlogis(seq(-3, 10, 0.1), location, scale), type = "l",
%  ylim = c(0, 0.3), xlim = c(-3, 10), lwd = 2,
%  xlab = expression(paste("y* (= ", sqrt("precipitation"), ")")), ylab = "predictive density", 
%  col = uibkblue, frame.plot = FALSE)
%@
%  \onslide<2>
%<<echo=FALSE,fig=TRUE, width=6, height=4.5>>=
%plot(seq(-3, 10, 0.1), dlogis(seq(-3, 10, 0.1), location, scale), type = "l",
%  ylim = c(0, 0.3), xlim = c(-3, 10), lwd = 2,
%  xlab = expression(paste("y* (= ", sqrt("precipitation"), ")")), ylab = "predictive density", 
%  col = uibkblue, frame.plot = FALSE)

%polygon(c(-3, 0, seq(0, -3, -0.1)), 
%  c(0, 0, dlogis(seq(0, -3, -0.1), location, scale)), 
%  col = adjustcolor(uibkblue, alpha = 0.7), border = FALSE)
%legend("topright", bty = "n", legend = 
%  c(expression(paste(P(y*"*" <= 0 * "|" * x * "," * z), "=", 
%  Phi*bgroup('(',frac(0 - x^T*beta, exp(z^T*gamma)),')')))))
%@
%  \onslide<3>
%<<echo=FALSE,fig=TRUE, width=6, height=4.5>>=
%plot(seq(-3, 10, 0.1), dlogis(seq(-3, 10, 0.1), location, scale), type = "l",
%  ylim = c(0, 0.3), xlim = c(-3, 10), lwd = 2,
%  xlab = expression(paste("y* (= ", sqrt("precipitation"), ")")), ylab = "predictive density", 
%  col = uibkblue, frame.plot = FALSE)

%polygon(c(-3, 2, seq(2, -3, -0.1)), 
%  c(0, 0, dlogis(seq(2, -3, -0.1), location, scale)), 
%  col = adjustcolor(uibkblue, alpha = 0.7), border = FALSE)
%legend("topright", bty = "n", legend = 
%  c(expression(paste(P(y*"*" <= 0 * "|" * x * "," * z), "=", 
%  Phi*bgroup('(',frac(0 - x^T*beta, exp(z^T*gamma)),')'))),
%  expression(paste(P(y*"*" <= 2 * "|" * x * "," * z), "=", 
%  Phi*bgroup('(',frac(2 - x^T*beta, exp(z^T*gamma)),')')))))
%@
%\end{overprint}
%\end{frame}


%\begin{frame}
%\frametitle{Ordered regression}
%\vspace{-1cm}
%\begin{eqnarray*}
%  y^{*} &\sim &\mathcal{N}(\mu, \sigma^2)\\
%  \mu &=& \mathbf{x}^\top \beta \\
%  \log(\sigma) &= &\mathbf{z}^\top \gamma
%\end{eqnarray*}

%\textbf{Ordered response:} 
%\begin{equation*}
%	y =\begin{cases}
%		1 & y^{*} \le q_1 \\
%		2 & q_1 < y^{*} \le q_2 \\
%    3 & q_2 < y^{*} \le q_3 \\
%    \ldots
%	\end{cases}
%\end{equation*}
%\begin{equation*}\pause
%  P(y \le j|\mathbf{x}, \mathbf{z}) = \Phi \left( \frac{\theta_j - \mu}{\sigma} \right)
%\end{equation*}
%\begin{itemize}
%  \item $\theta_j$: either $\theta_j=q_j$ or additional regression coefficients
%\end{itemize}
%\end{frame}


%\begin{frame}
%\frametitle{Model comparison}
%\vspace{1.5cm}
%%<<label=tab1,echo=FALSE,results=tex>>=
%%library("memisc")
%%library("ordinal")
%%th <- unique(quantile(RainIbk$rain, seq(0.2,0.8, 0.2)))
%%th <- round(sqrt(th))
%%getSummary.crch <- function (obj, alpha = 0.05, ...) 
%%{
%%    cf <- summary(obj)$coefficients
%%    cval <- qnorm(1 - alpha/2)
%%    for (i in seq_along(cf)) cf[[i]] <- cbind(cf[[i]], cf[[i]][, 
%%        1] - cval * cf[[i]][, 2], cf[[i]][, 1] + cval * cf[[i]][, 
%%        2])
%%    nam <- unique(unlist(lapply(cf, rownames)))
%%    acf <- array(dim = c(length(nam), 6, length(cf)), dimnames = list(nam, 
%%        c("est", "se", "stat", "p", "lwr", "upr"), names(cf)))
%%    for (i in seq_along(cf)) acf[rownames(cf[[i]]), , i] <- cf[[i]]
%%    return(list(coef = acf, sumstat = c(N = obj$n, logLik = as.vector(logLik(obj)), 
%%        AIC = AIC(obj), BIC = AIC(obj, k = log(obj$n))), contrasts = obj$contrasts, 
%%        xlevels = obj$xlevels, call = obj$call))
%%}
%%source("/home/jakobm/Dropbox/meteoR/crch/R/hxlr.R")
%%library("Formula")
%%censored <- crch(sqrt(rain) ~ sqrtensmean | sqrtenssd, data = RainIbk, dist = "gaussian", left = 0)
%%ordered  <- hxlr(sqrt(rain) ~ sqrtensmean | sqrtenssd, data = RainIbk, thresholds = th, link = "probit")



%%ordered2 <- censored
%%ordered2$coefficients$location <- coef(ordered, type = "latent", model = "location")
%%ordered2$coefficients$scale <- coef(ordered, type = "latent", model = "scale")
%%ordered2$vcov <- vcov(ordered, type = "latent")
%%ordered <- ordered2

%%write.mtable(mtable(censored, ordered, summary.stats = FALSE),forLaTeX=TRUE, useDcolumn = F, useBooktabs = FALSE)

%%@
%\begin{center}
%  \begin{tabular}{lcrrcrr}
%    \hline\hline
%    &\multicolumn{2}{c}{censored} & \multicolumn{2}{c}{ordered}\\

%    &\multicolumn{1}{c}{location} & \multicolumn{1}{c}{scale} & \multicolumn{1}{c}{location} & \multicolumn{1}{c}{scale}\\
%    \hline
%    (Intercept) &   $-1.361^{***}$ & $ 0.332^{***}$ & $-1.444^{***}$ & $ 0.294^{***}$\\
%                &    $(0.046)  $   &  $(0.021)  $   &  $(0.050)  $   &  $(0.025)  $  \\
%    $\sqrt{\mathsf{ensmean}}$ &   $ 0.785^{***}$ &  $         $   & $ 0.797^{***}$ &  $         $  \\
%                &    $(0.010)  $   &  $         $   &  $(0.011)  $   &  $         $  \\
%    $\sqrt{\mathsf{enssd}}$   &    $         $   & $ 0.254^{***}$ &  $         $   & $ 0.308^{***}$\\
%                &    $         $   &  $(0.038)  $   &  $         $   &  $(0.047)  $  \\
%    \hline\hline
%  \end{tabular}
%\end{center}
%\end{frame}


\subsection{Summary}
\begin{frame}
\frametitle{Summary}
\textbf{Censored regression with conditional heteroscedasticity:}
\begin{itemize}
  \item can be used for various applications like precipitation forecasts
  \item R implementation \pkg{crch}, similar to \code{glm()}
  \item standard methods available
  \item 
  \item Ordered regression more robust to misspecification
  \item Similar coefficients in ordered and censored model:\\ 
    $\rightarrow$ Normal distribution assumption appropriate
\end{itemize}
\end{frame}


%\subsection{Bibliography}
%\begin{frame}
%\frametitle{Bibliography}
%\nocite{Messner2014, Messner2014a, crch}
%\bibliographystyle{ametsoc}
%\bibliography{refs.bib}
%\end{frame}

%\begin{frame}
%\frametitle{\"OSG-Statistiktage forecast}
%\textbf{Accumulated precipitation 2014-09-10 to 2014-09-13}
%<<echo=FALSE,fig=TRUE, width=6, height=4.2>>=
%load("RainIbkOSG.rda")
%dmo$ensmean <- rowMeans(dmo[1:11])
%dmo$enssd <- sd(dmo[1:11])
%dmo$sqrtensmean <- rowMeans(sqrt(dmo[1:11]))
%dmo$sqrtenssd <- sd(sqrt(dmo[1:11]))
%location <- predict(censored, newdata = dmo, type = "location")
%scale <- predict(censored, newdata = dmo, type = "scale")
%x <- seq(0, 10, 0.1)
%#d <- dlogis((sqrt(x) - location)/scale)/2/sqrt(x)/scale
%d <- dlogis((x-location)/scale)
%plot(x, d, type = "l",
%  ylim = c(0, 0.3), xlim = c(0, 10), lwd = 2,
%  xlab = "precipitation", ylab = "predictive density", 
%  col = uibkblue, frame.plot = FALSE, axes = FALSE)
%axis(2)
%axis(1, at = seq(0, 10, 2), label = seq(0, 10, 2)^2) 

%legend("topright", bty = "n", xjust = 0, cex = 1.5, legend = 
%  c(as.expression(bquote(hat(y)~"="~.(round(location^2, digits = 0))~"mm")), "",
%  as.expression(bquote(P(y>0)~"="~.(round(pnorm(0, location, scale,
%  lower.tail = FALSE), digits = 3) * 100)~"%"))))
%@
%\end{frame}

\end{document}


