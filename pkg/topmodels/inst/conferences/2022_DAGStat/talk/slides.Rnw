\documentclass[11pt,t,usepdftitle=false,aspectratio=169]{beamer}
\usetheme[url]{uibk}

\title{}

\title[Visualizing Goodness of Fit of Probabilistic Regression Models]{Visualizing Goodness of Fit of \\\vspace{.2em} Probabilistic Regression Models}
\author[Moritz N. Lang]{Moritz N.\ Lang, Reto Stauffer, Achim Zeileis}

%-------------------------------------------------------------------
% Preamble
%-------------------------------------------------------------------
%% Create new footer line

%% Right
\setbeamertemplate{footline}{
  \hfill \vspace*{1.em}  \insertframenumber{} / \inserttotalframenumber \hspace*{1ex} {\tiny \ccLogo \ccAttribution} \hspace*{2ex}
}

%% Left
%\setbeamertemplate{footline}{
% \hspace{1em} \vspace*{1.em} {\tiny \ccLogo \ccAttribution}  \hspace*{1ex} \insertframenumber{} / \inserttotalframenumber \hspace*{2ex}
%}

%% Adapt URL font and set URL
\setbeamerfont{url}{size*={11.5pt}{13pt},series=\mdseries}
\URL{https://topmodels.R-Forge.R-project.org/}

%% Adapt headerimage
% \renewcommand{\headerimage}[1]{%
%    \IfStrEqCase{#1}{%
%       {1}{%
%          \gdef\myheaderimageid{#1}%
%          \gdef\myheaderimageposition{nw}%
%          \gdef\myheaderimage{forest.jpg}%
%       }}[%
%          \gdef\myheaderimageid{1}%
%          \gdef\myheaderimageposition{nw}%
%          \gdef\myheaderimage{forest.jpg}%
%       ]%
% }
\headerimage{4}

%% Add graphics path
\graphicspath{{Figures/}}

\usepackage[utf8]{inputenc}

%% Use some packages
\usepackage[utf8]{inputenc}
\setbeamertemplate{caption}{\insertcaption}
% \usepackage{Sweave}
\usepackage{changepage}
\usepackage{amsmath,tikz}
\usepackage{calc}
\usepackage{graphicx}
\usetikzlibrary{positioning,shapes,arrows,decorations.pathreplacing,calc,automata,mindmap,trees,tikzmark,decorations.pathreplacing}
\usepackage{xcolor}
\usepackage{fontawesome}
\usepackage{ccicons}

%% Define some new commands
\newcommand{\credit}[1]{\par\hfill \tiny  \ccCopy ~\itshape#1}
\newcommand{\argmax}{\operatorname{argmax}\displaylimits}
\newcommand{\BoldRightarrow}[1][0.1pt]{\tikz[baseline=-0.26em,y=3em, x=3em]{\filldraw[line width=#1] (0.4202,0.0021) .. controls (0.4202,-0.0000) and (0.4188,-0.0018) .. (0.4171,-0.0025) .. controls (0.3917,-0.0092) and (0.3699,-0.0236) .. (0.3509,-0.0401) .. controls (0.3355,-0.0538) and (0.3225,-0.0704) .. (0.3130,-0.0890) .. controls (0.3119,-0.0915) and (0.3094,-0.0929) .. (0.3066,-0.0929) .. controls (0.3028,-0.0929) and (0.2996,-0.0897) .. (0.2996,-0.0858) .. controls (0.2996,-0.0848) and (0.3000,-0.0837) .. (0.3003,-0.0827) .. controls (0.3087,-0.0665) and (0.3193,-0.0517) .. (0.3316,-0.0391) -- (0.1181,-0.0391) .. controls (0.1143,-0.0391) and (0.1111,-0.0359) .. (0.1111,-0.0320) .. controls (0.1111,-0.0282) and (0.1143,-0.0250) .. (0.1181,-0.0250) -- (0.3471,-0.0250) .. controls (0.3611,-0.0137) and (0.3766,-0.0046) .. (0.3935,0.0021) .. controls (0.3766,0.0088) and (0.3611,0.0179) .. (0.3471,0.0292) -- (0.1181,0.0292) .. controls (0.1143,0.0292) and (0.1111,0.0323) .. (0.1111,0.0362) .. controls (0.1111,0.0401) and (0.1143,0.0432) .. (0.1181,0.0432) -- (0.3316,0.0432) .. controls (0.3193,0.0559) and (0.3087,0.0707) .. (0.3003,0.0868) .. controls (0.3000,0.0879) and (0.2996,0.0889) .. (0.2996,0.0900) .. controls (0.2996,0.0939) and (0.3028,0.0970) .. (0.3066,0.0970) .. controls (0.3094,0.0970) and (0.3119,0.0956) .. (0.3130,0.0932) .. controls (0.3225,0.0745) and (0.3355,0.0580) .. (0.3509,0.0443) .. controls (0.3699,0.0278) and (0.3917,0.0133) .. (0.4171,0.0067) .. controls (0.4188,0.0059) and (0.4202,0.0042) .. (0.4202,0.0021) -- cycle;}}

%% Create appendix with no page numbering
\newcommand{\backupbegin}{
   \newcounter{finalframe}
   \setcounter{finalframe}{\value{framenumber}}
}
\newcommand{\backupend}{
   \setcounter{framenumber}{\value{finalframe}}
}

%% Define colors
\definecolor{HighlightOrange}{rgb}{0.9490196,0.5725490,0.0000000}
\definecolor{HighlightBlue}{rgb}{0.4784314,0.7490196,0.9803922}
\definecolor{forestred}{RGB}{206,73,81}
\definecolor{treegreen}{RGB}{0,143,0}
\definecolor{lightblue}{RGB}{34,151,230}
\definecolor{lightorange}{RGB}{255,165,0}

%% Sweave options and setup R
\SweaveOpts{engine=R, eps=FALSE, keep.source=TRUE}
<<preliminaries, echo=FALSE, results=hide>>=
options(prompt = "R> ", continue = "+  ", useFancyQuotes = FALSE, width = 70)

set.seed(7)

invisible(.Call(grDevices:::C_palette, grDevices::hcl(
  h = c(0,   5, 125, 245, 195, 315,  65,   0),
  c = c(0, 100,  90,  85,  63, 105,  90,   0),
  l = c(0,  55,  75,  60,  82,  48,  80,  65)
)))

library("topmodels")
library("ggplot2")
@


%-------------------------------------------------------------------
% Main
%-------------------------------------------------------------------
\begin{document}
\section{Visualizing Goodness of Fit of Probabilistic Regression Models}


%-------------------------------------------------------------------
\subsection{Motivation}
%-------------------------------------------------------------------

%% SLIDE
\begin{frame}[fragile]
\frametitle{Motivation}

\vspace{-0.75em}

\textbf{Probabilistic regression models:}
\begin{itemize}
\item Modelling the entire probability distribution rather than just the expectation.
\item Various model classes and types.
\end{itemize}

\bigskip
\pause

\textbf{Goodness of fit:}
\begin{itemize}
\item Scoring rules for evaluating the predictive performance, e.g., using the log-score or the (continuous) ranked probability score.
\item Visualizations especially suitable for identifying possible misspecifications.
\end{itemize}

\bigskip
\pause 

\begin{itemize}[<+->]
\item[\BoldRightarrow] \textbf{What are useful elements of such graphics?}
\item[\BoldRightarrow] \textbf{What are relative (dis)advantages?}
\end{itemize}
\end{frame}


%-------------------------------------------------------------------
\subsection{Probabilities of goals in the 2018 FIFA World Cup}
%-------------------------------------------------------------------

<<model_fifa, eval=TRUE, echo=FALSE, results=hide>>=
data("FIFA2018", package = "distributions3")
m <- glm(goals ~ difference, data = FIFA2018, family = poisson)
expected <- distributions3::pdf(distributions3::Poisson(fitted(m)), 0:6)
@


%% SLIDE
\begin{frame}[fragile]
\frametitle{Probabilities of goals in the 2018 FIFA World Cup}

\vspace{-0.75em}

\textbf{Observation data:}
\begin{itemize}
\item Goals ($y_i$) scored by the two teams in all 64 matches.
\end{itemize}

\bigskip
\pause

\textbf{Regression:}
\begin{itemize}
\item Difference in estimated ability of the competing teams as covariable:
\item[] $\log(\hat \lambda_i) = \hat \beta_0 + \hat \beta_1 \cdot \text{ability\_diff}_i$
\end{itemize}

\bigskip
\pause

\textbf{Probability distribution:} 
\begin{itemize}
\item Poisson distribution for each team/match ($i$) in the tournament:
\item[] $y_i \sim \, \text{Pois}(\hat \lambda_i)$
\end{itemize}

\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Probabilities of goals in the 2018 FIFA World Cup}

\vspace{-0.75em}

\textbf{First semi-final:} France won 1-0 against Belgium.

\vspace{0.25em}

\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<fifa_poisson1, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
idx <- c(121, 122)
df <- data.frame(group =  FIFA2018$team[idx])
df <- cbind(df, expected[idx, ])
df <- tidyr::pivot_longer(df, cols = d_0:d_6, names_prefix = "^d_", names_to = "goals")
df$observed <- factor(0, levels = c(0, 1), label = c("no", "yes"))
df[df$group == "FRA" & df$goals == "1", "observed"] <- "yes"
df[df$group == "BEL" & df$goals == "0", "observed"] <- "yes"
df$group <- factor(df$group, levels = c("FRA", "BEL"))

df_text <- data.frame(
  label = sprintf("lambda == %s", round(fitted(m)[idx], 2)),
  group =  factor(FIFA2018$team[idx], levels = c("FRA", "BEL"))
)

gg1 <- ggplot(df, aes(x = goals, y = value, group = group)) + 
  geom_col(aes(fill = observed)) + 
  xlab("Goals") + 
  ylab("Probability") + 
  facet_grid(group ~ .) +
  theme_bw() + scale_fill_manual(values = c("darkgray", "grey50")) + guides(fill = "none")

gg1 + geom_text(
  data    = df_text,
  mapping = aes(x = Inf, y = Inf, label = label),
  hjust   = 1.2,
  vjust   = 2,
  parse = TRUE
)
@
\end{center}
\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Probabilities of goals in the 2018 FIFA World Cup}

\vspace{-0.75em}

\textbf{Second semi-final:} Croatia won 2-1 against England.

\vspace{0.25em}

\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<fifa_poisson2, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
idx <- c(123, 124)
df <- data.frame(group =  FIFA2018$team[idx])
df <- cbind(df, expected[idx, ])
df <- tidyr::pivot_longer(df, cols = d_0:d_6, names_prefix = "^d_", names_to = "goals")
df$observed <- factor(0, levels = c(0, 1), label = c("no", "yes"))
df[df$group == "CRO" & df$goals == "2", "observed"] <- "yes"
df[df$group == "ENG" & df$goals == "1", "observed"] <- "yes"
df$group <- factor(df$group, levels = c("CRO", "ENG"))

df_text <- data.frame(
  label = sprintf("lambda == %s", round(fitted(m)[idx], 2)),
  group =  factor(FIFA2018$team[idx], levels = c("CRO", "ENG"))

)

gg1 <- ggplot(df, aes(x = goals, y = value, group = group)) + 
  geom_col(aes(fill = observed)) + 
  xlab("Goals") + 
  ylab("Probability") + 
  facet_grid(group ~ .) +
  theme_bw() + scale_fill_manual(values = c("darkgray", "grey50")) + guides(fill = "none")

gg1 + geom_text(
  data    = df_text,
  mapping = aes(x = Inf, y = Inf, label = label),
  hjust   = 1.2,
  vjust   = 2,
  parse = TRUE
)
@
\end{center}
\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Probabilities of goals in the 2018 FIFA World Cup}

\vspace{-0.75em}

\textbf{Final:} France won 4-2 against Croatia.

\vspace{0.25em}

\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<fifa_poisson3, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
idx <- c(127, 128)
df <- data.frame(group =  FIFA2018$team[idx])
df <- cbind(df, expected[idx, ])
df <- tidyr::pivot_longer(df, cols = d_0:d_6, names_prefix = "^d_", names_to = "goals")
df$observed <- factor(0, levels = c(0, 1), label = c("no", "yes"))
df[df$group == "FRA" & df$goals == "4", "observed"] <- "yes"
df[df$group == "CRO" & df$goals == "2", "observed"] <- "yes"
df$group <- factor(df$group, levels = c("FRA", "CRO"))

df_text <- data.frame(
  label = sprintf("lambda == %s", round(fitted(m)[idx], 2)),
  group =  factor(FIFA2018$team[idx], levels = c("FRA", "CRO"))
)

gg1 <- ggplot(df, aes(x = goals, y = value, group = group)) + 
  geom_col(aes(fill = observed)) + 
  xlab("Goals") + 
  ylab("Probability") + 
  facet_grid(group ~ .) +
  theme_bw() + scale_fill_manual(values = c("darkgray", "grey50")) + guides(fill = "none")

gg1 + geom_text(
  data    = df_text,
  mapping = aes(x = Inf, y = Inf, label = label),
  hjust   = 1.2,
  vjust   = 2,
  parse = TRUE
)
@
\end{center}
\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Graphical assessment}

\vspace{-0.75em}

\textbf{However:} Is the model calibrated?

\bigskip
\bigskip

\pause

\begin{columns}[T]
\begin{column}{0.33\textwidth}
\only<2>{
<<fifa_goodness1a_comp, fig=FALSE, echo=FALSE>>=
gg <- autoplot(rootogram(m, style = "standing", scale = "raw", fill = "darkgray", fitted = FALSE, xlab = "Goals", plot = FALSE, ref = FALSE))
@
<<fifa_goodness1a, fig=TRUE, echo=FALSE, height=2.3, width=3.2>>=
gg + scale_x_continuous(breaks = 0:6, expand = c(0.01, 0.01))
@

Marginal calibration:
\begin{itemize}
\item[-] Observed frequencies.
\end{itemize}
}
\only<3->{
<<fifa_goodness1b_comp, fig=FALSE, echo=FALSE>>=
gg <- autoplot(rootogram(m, style = "standing", scale = "raw", fill = "darkgray", col = "black", fitted = TRUE, xlab = "Goals", plot = FALSE, ref = FALSE))
@
<<fifa_goodness1b, fig=TRUE, echo=FALSE, height=2.3, width=3.2>>=
gg + scale_x_continuous(breaks = 0:6, expand = c(0.01, 0.01))
@

Marginal calibration:
\begin{itemize}
\item[-] Observed frequencies.
\item[-] Compare: Expected.
\end{itemize}
}
\end{column}

\pause
\pause

\begin{column}{0.33\textwidth}
<<fifa_goodness2, fig=TRUE, echo=FALSE, height=2.3, width=3.2>>=
set.seed(0)
pithist(m, type = "random", nsim = 10, fill = "darkgray", alpha = 1, col = "black",
  ref = FALSE, confint = FALSE, simint = FALSE)
@

Probabilistic calibration:
\begin{itemize}
\item[-] PIT residuals: $u_i = F(y_i | \, \hat{\boldsymbol{\theta}}_i)$.
\item[-] Compare: Uniform.
\end{itemize}

\end{column}

\pause

\begin{column}{0.33\textwidth}
<<fifa_goodness3, fig=TRUE, echo=FALSE, height=2.3, width=3.2>>=
set.seed(0)
pithist(m, type = "random", nsim = 10, trafo = qnorm,
  xlim = c(-3, 3), fill = "darkgray", col = "black", alpha = 1, xlab = "(Randomized) quantile residuals",
  ref = FALSE, confint = FALSE, simint = FALSE)
@

Probabilistic calibration:
\begin{itemize}
\item[-] Quantile residuals: $\hat{r}_i = \Phi^{-1}(u_i)$.
\item[-] Compare: Normal
\end{itemize}

\end{column}
\end{columns}


\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Marginal calibration}

\vspace{-0.75em}

\textbf{Observed frequencies:}

\vspace{0.25em}

\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<fifa_rootogram1_comp, fig=FALSE, echo=FALSE>>=
gg <- autoplot(rootogram(m, style = "standing", scale = "raw", ref = FALSE, fill = "darkgray", fitted = FALSE, xlab = "Goals", plot = FALSE))
@
<<fifa_rootogram1, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
gg + scale_x_continuous(breaks = 0:6, expand = c(0.01, 0.01))
@
\end{center}
\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Marginal calibration}

\vspace{-0.75em}

\textbf{Observed vs. expected frequencies:}

\vspace{0.25em}

\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<fifa_rootogram2_comp, fig=FALSE, echo=FALSE>>=
gg <- autoplot(rootogram(m, style = "standing", scale = "raw", fitted = TRUE, ref = FALSE, fitted_size = 1.25, xlab = "Goals", plot = FALSE))
@
<<fifa_rootogram2, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
gg + scale_x_continuous(breaks = 0:6, expand = c(0.01, 0.01))
@
\end{center}
\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Marginal calibration}

\vspace{-0.75em}

\textbf{$\sqrt{\text{Observed}}$ vs. $\sqrt{\text{expected}}$ frequencies:}

\vspace{0.25em}

\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<fifa_rootogram3_comp, fig=FALSE, echo=FALSE>>=
gg <- autoplot(rootogram(m, style = "standing", scale = "sqrt", fitted = TRUE, ref = FALSE, fitted_size = 1.25, xlab = "Goals", plot = FALSE))
@
<<fifa_rootogram3, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
gg + scale_x_continuous(breaks = 0:6, expand = c(0.01, 0.01))
@
\end{center}
\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Marginal calibration}

\vspace{-0.75em}

\textbf{$\sqrt{\text{Observed}}$ vs. $\sqrt{\text{expected}}$ frequencies:}

\vspace{0.25em}

\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<fifa_rootogram4_comp, fig=FALSE, echo=FALSE>>=
gg <- autoplot(rootogram(m, style = "hanging", scale = "sqrt", fitted = TRUE, ref = TRUE, fitted_size = 1.25, xlab = "Goals", plot = FALSE))
<<fifa_rootogram4, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
gg + scale_x_continuous(breaks = 0:6, expand = c(0.01, 0.01))
@
\end{center}
\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Marginal calibration}

\vspace{-0.75em}

\textbf{Observed vs. expected frequencies:}

\begin{itemize}
\item Advantage: Scale of observations is natural, direct interpretation.
\item Disadvantage: Needs to be compared with a combination of distributions.
\end{itemize}

\bigskip
\pause

\textbf{Rootogram:}

\begin{itemize}
\item Frequencies on raw or square-root scale.
\item Hanging, standing, or suspended styled rootograms.
\end{itemize}

\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Probabilistic calibration}

\vspace{-0.75em}

\textbf{PIT residuals (randomized, nsim = 1a):}

\vspace{0.25em}

\only<1>{
\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<fifa_pithist1a, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
set.seed(3)
pithist(m, nsim = 1, type = "random", fill = "darkgray", col = "black", ref = FALSE, simint = FALSE, confint = FALSE, alpha = 1, ylim = c(NA, 1.788086), plot = "ggplot2")
@
\end{center}
}

\only<2>{
\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<fifa_pithist1b, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
set.seed(3)
pithist(m, nsim = 1, type = "random", fill = "darkgray", col = "black", ref = TRUE, simint = FALSE, confint = FALSE, alpha = 1, ylim = c(NA, 1.788086), ref_size = 1, plot = "ggplot2")
@
\end{center}
}

\only<3>{
\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<fifa_pithist1c, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
set.seed(3)
pithist(m, nsim = 1, type = "random", fill = "darkgray", col = "black", ref = TRUE, simint = FALSE, confint = TRUE, alpha = 1, ylim = c(NA, 1.788086), ref_size = 1, confint_size = 1, plot = "ggplot2")
@
\end{center}
}
\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Probabilistic calibration}

\vspace{-0.75em}

\textbf{PIT residuals (randomized, nsim = 1b):}

\vspace{0.25em}

\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<fifa_pithist2, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
set.seed(2)
pithist(m, nsim = 1, type = "random", fill = "darkgray", col = "black", ref = TRUE, simint = FALSE, confint = TRUE, alpha = 1, ylim = c(NA, 1.788086), ref_size = 1, confint_size = 1, plot = "ggplot2")
@
\end{center}
\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Probabilistic calibration}

\vspace{-0.75em}

\textbf{PIT residuals (randomized, nsim = 1c):}

\vspace{0.25em}

\only<1>{
\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<fifa_pithist3a, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
set.seed(5)
pithist(m, nsim = 1, type = "random", fill = "darkgray", col = "black", ref = TRUE, simint = FALSE, confint = TRUE, alpha = 1, ylim = c(NA, 1.788086), ref_size = 1, confint_size = 1, plot = "ggplot2")
@
\end{center}
}
\only<2>{
\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<fifa_pithist3b, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
set.seed(5)
pithist(m, nsim = 1, type = "random", fill = "darkgray", col = "black", ref = TRUE, simint = TRUE, confint = TRUE, alpha = 1, ylim = c(NA, 1.788086), ref_size = 1, confint_size = 1, plot = "ggplot2")
@
\end{center}
}
\end{frame}

%% SLIDE
\begin{frame}[fragile]
\frametitle{Probabilistic calibration}

\vspace{-0.75em}

\textbf{PIT residuals (randomized, nsim = 10):}

\vspace{0.25em}

\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<fifa_pithist3, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
set.seed(10)
pithist(m, nsim = 10, type = "random", fill = "darkgray", col = "black", alpha = 1, ylim = c(NA, 1.788086), ref_size = 1, confint_size = 1,  plot = "ggplot2")
@
\end{center}
\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Probabilistic calibration}

\vspace{-0.75em}

\textbf{PIT residuals (randomized, nsim = 100):}

\vspace{0.25em}

\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<fifa_pithist4, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
set.seed(10)
pithist(m, nsim = 100, type = "random", fill = "darkgray", col = "black", alpha = 1, ylim = c(NA, 1.788086), ref_size = 1, confint_size = 1,  plot = "ggplot2")
@
\end{center}
\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Probabilistic calibration}

\vspace{-0.75em}

\textbf{PIT residuals (expected):}

\vspace{0.25em}

\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<fifa_pithist5, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
set.seed(10)
pithist(m, type = "expected", fill = "darkgray", col = "black", alpha = 1, ylim = c(NA, 1.788086), ref_size = 1, confint_size = 1,  plot = "ggplot2")
@
\end{center}
\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Probabilistic calibration}

\vspace{-0.75em}

\textbf{(Randomized) quantile residuals:}

\vspace{0.25em}

\only<1>{
\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<fifa_pithist_norm1a, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
set.seed(1000)
pithist(m, breaks = seq(-5.5, 5.5, by = 0.5), simint = FALSE, nsim = 1000, type = "random", trafo = qnorm, xlim = c(-3.5, 3.5), fill = "darkgray", col = "black", alpha = 1, ref = FALSE, confint = FALSE,  plot = "ggplot2", ylim = c(NA, 0.515625))
@
\end{center}
}
\only<2>{
\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<fifa_pithist_norm1b, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
set.seed(1000)
pithist(m, breaks = seq(-5.5, 5.5, by = 0.5), simint = FALSE, nsim = 1000, type = "random", trafo = qnorm, xlim = c(-3.5, 3.5), fill = "darkgray", col = "black", alpha = 1, ref_size = 1, confint_size = 1,  plot = "ggplot2", ylim = c(NA, 0.515625))
@
\end{center}
}
\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Probabilistic calibration}

\vspace{-0.75em}

\textbf{Observed vs. expected quantiles:}

\vspace{0.25em}

\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<fifa_qqrplot, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
set.seed(3)
qqrplot(m, plot = "ggplot2", ref_linetype = 1, confint = "line", simint = FALSE)
@
\end{center}
\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Probabilistic calibration}

\vspace{-0.75em}

\textbf{Deviations vs. expected quantiles:}

\vspace{0.25em}

\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<fifa_wormplot, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
set.seed(3)
wormplot(m, plot = "ggplot2", ref_linetype = 1, confint = "line", simint = FALSE)
@
\end{center}
\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Probabilistic calibration}

\vspace{-0.75em}

\textbf{PIT residuals and (randomized) quantile residuals:}

\begin{itemize}
\item Advantage: Needs to be compared with only one distribution\\(uniform or normal).
\item Disadvantage: Scale is not so natural.\\May require randomization for discrete distributions.
\end{itemize}

\bigskip
\pause

\textbf{PIT histogram:}

\begin{itemize}
\item Probability scale or transformed to any other distribution scale.
\item Random or expected (non-normal) computed PIT histogram.
\end{itemize}

\bigskip
\pause

\textbf{Q-Q residuals plot:}

\begin{itemize}
\item Normal scale or transformed to any other distribution scale.
\item Q-Q plot or detrended Q-Q plot (wormplot).
\end{itemize}

\end{frame}


%-------------------------------------------------------------------
\subsection{Probabilistic precipitation forecasting}
%-------------------------------------------------------------------

<<model_rain, eval=TRUE, echo=FALSE, results=hide>>=
data("RainIbk", package = "crch")

RainIbk <- sqrt(RainIbk)
RainIbk$ensmean <- apply(RainIbk[,grep('^rainfc',names(RainIbk))], 1, mean)
RainIbk$enssd <- apply(RainIbk[,grep('^rainfc',names(RainIbk))], 1, sd)
RainIbk <- subset(RainIbk, enssd > 0)

m_lm <- lm(rain ~ ensmean, data = RainIbk)

## heteroscedastic censored regression with a logistic distribution assumption
m_hclog <- crch::crch(rain ~ ensmean | log(enssd), data = RainIbk, left = 0,
  dist = "logistic")

@

%% SLIDE
\begin{frame}[fragile]
\frametitle{Probabilistic precipitation forecasting}

\vspace{-0.75em}

\textbf{Observation data:}
\begin{itemize}
\item 3 day-accumulated precipitation amounts over 13 years (2000--2013).
\item Observation station ``Innsbruck'' in Austria.
\end{itemize}

\bigskip
\pause

\textbf{Covariates:}
\begin{itemize}
\item Ensemble mean and standard deviation of numerical precipitation forecasts.
\end{itemize}

\bigskip
\pause

\textbf{Model assumptions:} 
\begin{itemize}
\item Homoscedastic linear regression: 
\item[] $\hat \mu_i = \, \hat \beta_{0} + \hat \beta_1 \cdot \text{ensmean}_i$, ~ $\hat \sigma = \text{sd}(\epsilon)$
\item Heteroscedastic censored regression with a logistic distribution assumption:
\item[] $\text{y}_i \sim \, \text{Logistic}_0\big(\hat \mu_i = \hat \beta_{0} + \hat \beta_1 \cdot \text{ensmean}_i, \, \hat \sigma_i = \exp(\hat \gamma_0 + \hat \gamma_1 \cdot \text{enssd}_i)\big)$
\end{itemize}

\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Probabilistic precipitation forecasting}

\vspace{-0.75em}

\textbf{Observed vs. ensmean:}

\vspace{-2em}

\only<1>{
\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<rain_scatter1a, fig=TRUE, echo=FALSE, height=5, width=6.>>=
plot(rain ~ ensmean, data = RainIbk, pch = 19, ylab = "Rain", col = gray(0, alpha = 0.2))
@
\end{center}
}

\only<2>{
\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<rain_scatter1b, fig=TRUE, echo=FALSE, height=5, width=6.>>=
plot(rain ~ ensmean, data = RainIbk, pch = 19, ylab = "Rain", col = gray(0, alpha = 0.2))
abline(coef(m_lm)[1:2], col = 3, lwd = 4)

legend("topright", lwd = 4, lty = 1, col = 3, "m_lm", bty = "n")
@
\end{center}
}

\only<3>{
\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<rain_scatter1c, fig=TRUE, echo=FALSE, height=5, width=6.>>=
plot(rain ~ ensmean, data = RainIbk, pch = 19, ylab = "Rain", col = gray(0, alpha = 0.2))
abline(coef(m_lm)[1:2], col = 3, lwd = 4)
abline(coef(m_hclog)[1:2], col = 4, lwd = 4)

legend("topright", lwd = c(4, 4), lty = c(1, 1), col = c(3, 4),
  c("m_lm", "m_hclog"), bty = "n")
@
\end{center}
}

\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Marginal calibration}

\vspace{-0.75em}

\textbf{$\sqrt{\text{Observed}}$ vs. $\sqrt{\text{expected}}$ frequencies:}

\vspace{0.25em}

\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<rain_rootogram, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
r1 <- rootogram(m_lm, plot = FALSE)
r2 <- rootogram(m_hclog, plot = FALSE)

ggplot2::autoplot(c(r1, r2), fitted_size = 1.25, xlab = "Rain")
@
\end{center}
\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Probabilistic calibration}

\vspace{-0.75em}

\textbf{PIT residuals (expected):}

\vspace{0.25em}

\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<rain_pithist1, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
p1 <- pithist(m_lm, plot = FALSE)
p2 <- pithist(m_hclog, plot = FALSE)

ggplot2::autoplot(c(p1, p2), fill = "darkgray", col = "black", alpha = 1, ref_size = 1, confint_size = 1)
@
\end{center}
\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Probabilistic calibration}

\vspace{-0.75em}

\textbf{PIT residuals (expected):}

\vspace{0.25em}

\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<rain_pithist2, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
ggplot2::autoplot(c(p1, p2), colour = c(3, 4), style = "line", single_graph = TRUE, confint_fill = 1, confint_alpha = 0.1, size = 1, confint = "polygon", ref = FALSE)
@
\end{center}
\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Probabilistic calibration}

\vspace{-0.75em}

\textbf{Observed vs. expected quantiles:}

\vspace{0.25em}

\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<rain_qqrplot, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
q1 <- qqrplot(m_lm, plot = FALSE)
q2 <- qqrplot(m_hclog, plot = FALSE)
ggplot2::autoplot(c(q1, q2), colour = c(3, 4), alpha = 0.8, single_graph = TRUE, simint = FALSE, confint ="polygon")
@
\end{center}
\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Probabilistic calibration}

\vspace{-0.75em}

\textbf{Deviations vs. expected quantiles:}

\vspace{0.25em}

\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<rain_wormplot, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
w1 <- wormplot(m_lm, plot = FALSE)
w2 <- wormplot(m_hclog, plot = FALSE)
ggplot2::autoplot(c(w1, w2), colour = c(3, 4), alpha = 0.8, single_graph = TRUE, simint = FALSE, confint ="polygon")
@
\end{center}
\end{frame}


%-------------------------------------------------------------------
\subsection{Summary}
%-------------------------------------------------------------------

%% SLIDE
\begin{frame}[fragile]
\frametitle{Summary}

\vspace{-0.75em}

\textbf{Graphical assessments:} Various possibilities suggested in different parts of the literature.

\begin{itemize}
  \item Rootogram.
  \item Probability integral transform (PIT) histogram.
  \item (Randomized) quantile-quantile residuals plot.
  \item Detrended Q-Q residuals plot or worm plot.
  \item Reliability diagram at prespecified thresholds.
\end{itemize}

\pause
\medskip
\bigskip

\textbf{topmodels:} Unifying toolbox for graphical model assessment.

\begin{itemize}
  \item available on R-Forge at \small{\url{https://topmodels.R-Forge.R-project.org/}}
\end{itemize}

\end{frame}


%%% SLIDE
%\begin{frame}
%\frametitle{Software}
%\vspace{-0.75em}
%\textbf{topmodels}: available on R-Forge at\\
%
%\medskip
%
%\small{\url{https://topmodels.R-Forge.R-project.org/}}\\
%
%\bigskip
%\medskip
%
%\textbf{Concept:} Unifying toolbox for probabilistic forecasts and graphical model assessment.
%
%\pause
%
%\bigskip
%\medskip
%
%\textbf{Main functions:}
%
%\medskip
%
%\begin{tabular}{ll}
%\code{procast}    & Probabilistic forecasts (\code{(g)lm}, \code{crch}, \code{disttree}, more to come).\\
%& Computation of probabilities, densities, scores, and Hessians. \\
%\code{rootogram}, \code{pithist}, & Plotting rootograms, PIT histograms,\\
%\code{qqrplot}, \code{wormplot}, & (randomized) Q-Q plots, worm plots,\\
%\code{reliagram} & and reliability diagrams.\\
%\code{plot, autoplot}   & Generic \code{plot}, \code{autoplot} function.%\\
%% \code{c}   & Generic \code{concatenate} function to plot combined objects.
%\end{tabular}
%
%\bigskip
%\medskip
%
%\end{frame}


%-------------------------------------------------------------------
\subsection{References}
%-------------------------------------------------------------------


%% SLIDE
\begin{frame}
\frametitle{References}

\footnotesize

Lang MN, Zeileis A \emph{et al.} (2021).
\dquote{topmodels: Infrastructure for Inference and Forecasting in Probabilistic Models.}
\emph{R package version 0.1-0}.
\url{https://topmodels.R-Forge.R-project.org/}

\bigskip

Dunn PK, Smyth GK (1996).
\dquote{Randomized Quantile Residuals.}
\emph{Journal of Computational and Graphical Statistics}, \textbf{5}(3), 236--244.
\doi{10.2307/1390802}

\medskip

Gneiting T, Balabdaoui F, Raftery AE (2007)
\dquote{Probabilistic Forecasts, Calibration and Sharpness.}
\emph{Journal of the Royal Statistical Society: Series B (Methodological)},
\textbf{69}(2), 243--268.
\doi{10.1111/j.1467-9868.2007.00587.x}

\medskip

Kleiber C, Zeileis A (2016).  
\dquote{Visualizing Count Data Regressions Using Rootograms.} 
\emph{The American Statistician}, 
\textbf{70}(3), 296--303.
\doi{10.1080/00031305.2016.1173590}

\medskip

Messner JW, Mayr GJ, Zeileis A (2016).
\dquote{Heteroscedastic Censored and Truncated Regression with {crch}.}
\emph{The R Journal}., \textbf{8}(1), 173--181.
\doi{10.32614/RJ-2016-012}

\medskip

Zeileis A, Leitner C, Hornik K (2018)
\dquote{Probabilistic Forecasts for the 2018 {FIFA} World Cup Based on the Bookmaker Consensus Model.}
Working Paper 2018-09. Working Papers in Economics; Statistics, Research Platform Empirical; Experimental Economics, Universität Innsbruck. \url{https://EconPapers.RePEc.org/RePEc:inn:wpaper:2018-09}.

\end{frame}


%% SLIDE
\title[]{\large{\color{uibkgraym}\url{https://topmodels.R-Forge.R-project.org/}}}
\author[]{\footnotesize \faEnvelope\,\,\href{mailto:moritz.lang@uibk.ac.at}{moritz.lang@uibk.ac.at} \hspace{1em} \faTwitter\,\href{https://twitter.com/MoritzNLang}{MoritzNLang}}
\URL{}

%%% SLIDE
%\title[]{\large{\color{uibkgraym}\url{https://topmodels.R-Forge.R-project.org/}}}
%\author[]{\footnotesize \faHome\,\,\url{https://moritzlang.org/} \hspace{1em} \faEnvelope\,\,\href{mailto:moritz.lang@uibk.ac.at}{moritz.lang@uibk.ac.at} \hspace{1em} \faTwitter\,\href{https://twitter.com/MoritzNLang}{MoritzNLang}}
%\URL{}

\section{Thank you}


%-------------------------------------------------------------------
\subsection{Appendix}
%-------------------------------------------------------------------
\backupbegin

%% SLIDE
\begin{frame}
~~~
\end{frame}


\subsection{More details}

%% SLIDE
\begin{frame}[fragile]
\frametitle{Probabilistic calibration}

\vspace{-0.75em}

\textbf{Quantile residuals:}

\vspace{0.25em}

\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<rain_pithist3, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
pithist(m_lm, breaks = 50, trafo = qnorm, xlim = c(-3, 3))
@
\end{center}
\end{frame}


%% SLIDE
\begin{frame}[fragile]
\frametitle{Probabilistic calibration}

\vspace{-0.75em}

\textbf{Observed vs. expected quantiles:}

\vspace{0.25em}

\begin{center}
\setkeys{Gin}{width=0.65\textwidth}
<<rain_qqrplot, fig=TRUE, echo=FALSE, height=4.5, width=6.3>>=
q1 <- qqrplot(m_lm, plot = FALSE)
q2 <- qqrplot(m_hclog, plot = FALSE)
ggplot2::autoplot(c(q1, q2), colour = c(3, 4), alpha = 0.8, single_graph = TRUE, simint = FALSE, confint ="polygon")
@
\end{center}
\end{frame}

\backupend

\end{document}
