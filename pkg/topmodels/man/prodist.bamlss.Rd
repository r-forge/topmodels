% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bamlss.R
\name{prodist.bamlss}
\alias{prodist.bamlss}
\title{Extracting Fitted or Predicted Probability Distributions from bamlss Models}
\usage{
\method{prodist}{bamlss}(object, ...)
}
\arguments{
\item{object}{A model object of class \code{\link[bamlss]{bamlss}}.}

\item{...}{Arguments passed on to \code{\link[bamlss]{predict.bamlss}}, 
e.g., \code{newdata}.}
}
\value{
An object inheriting from \code{distribution}.
}
\description{
Methods for \pkg{bamlss} model objects for extracting
fitted (in-sample) or predicted (out-of-sample) probability distribution
objects.
}
\details{
To facilitate making probabilistic forecasts based on \code{\link[bamlss]{bamlss}}
model objects, the \code{\link[distributions3]{prodist}} method extracts fitted or
predicted probability \code{distribution} objects. Internally, the
\code{\link[bamlss]{predict.bamlss}} method from the \pkg{bamlss} package is
used first to obtain the distribution parameters. Subsequently, the corresponding \code{distribution}
object is set up using \code{\link{BAMLSS}}, enabling the workflow provided by
the \pkg{distributions3} package.

Note that these probability distributions only reflect the random variation in
the dependent variable based on the model employed (and its associated
distributional assumption for the dependent variable). This does not capture
the uncertainty in the parameter estimates.
}
\examples{
\dontshow{ if(!requireNamespace("bamlss")) {
  if(interactive() || is.na(Sys.getenv("_R_CHECK_PACKAGE_NAME_", NA))) {
    stop("not all packages required for the example are installed")
  } else q() }
}
## packages, code, and data
library("bamlss")
library("distributions3")
data("cars", package = "datasets")

## fit heteroscedastic normal BAMLSS model
f <- list(dist ~ s(speed), sigma ~ s(speed))
m <- bamlss(f, data = cars, family = "gaussian")

## obtain predicted distributions for three levels of speed
d <- prodist(m, newdata = data.frame(speed = c(10, 20, 30)))
print(d)

## obtain quantiles (works the same for any distribution object 'd' !!)
quantile(d, 0.5)
quantile(d, c(0.05, 0.5, 0.95), elementwise = FALSE)
quantile(d, c(0.05, 0.5, 0.95), elementwise = TRUE)

## visualization
plot(dist ~ speed, data = cars)
nd <- data.frame(speed = 0:240/4)
nd$dist <- prodist(m, newdata = nd)
nd$fit <- quantile(nd$dist, c(0.05, 0.5, 0.95))
matplot(nd$speed, nd$fit, type = "l", lty = 1, col = "slategray", add = TRUE)

## moments
mean(d)
variance(d)

## simulate random numbers
random(d, 5)

## density and distribution
pdf(d, 50 * -2:2)
cdf(d, 50 * -2:2)

## further diagnostics: graphical and scores
pithist(m)
qqrplot(m)
proscore(m, type = c("LogLik", "CRPS", "MAE", "MSE"), aggregate = TRUE)

## note that proscore can replicate logLik() value
proscore(m, aggregate = sum)
logLik(m)

## Poisson example
data("FIFA2018", package = "distributions3")
m2 <- bamlss(goals ~ s(difference), data = FIFA2018, family = "poisson")
d2 <- prodist(m2, newdata = data.frame(difference = 0))
print(d2)
quantile(d2, c(0.05, 0.5, 0.95))
}
\seealso{
\code{\link{BAMLSS}} \code{\link[bamlss]{predict.bamlss}}
}
\keyword{distribution}
