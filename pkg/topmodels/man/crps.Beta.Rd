% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crps.R, R/crps.distribution.R
\name{crps.Beta}
\alias{crps.Beta}
\alias{crps.Bernoulli}
\alias{crps.Binomial}
\alias{crps.Erlang}
\alias{crps.Exponential}
\alias{crps.Gamma}
\alias{crps.GEV}
\alias{crps.Geometric}
\alias{crps.Gumbel}
\alias{crps.HyperGeometric}
\alias{crps.Logistic}
\alias{crps.LogNormal}
\alias{crps.NegativeBinomial}
\alias{crps.Normal}
\alias{crps.Poisson}
\alias{crps.StudentsT}
\alias{crps.Uniform}
\alias{crps.distribution}
\title{Methods for Evaluating the CRPS of Various Distributions}
\usage{
crps.Beta(y, x, drop = TRUE, elementwise = NULL, ...)

crps.Bernoulli(y, x, drop = TRUE, elementwise = NULL, ...)

crps.Binomial(y, x, drop = TRUE, elementwise = NULL, ...)

crps.Erlang(y, x, drop = TRUE, elementwise = NULL, ...)

crps.Exponential(y, x, drop = TRUE, elementwise = NULL, ...)

crps.Gamma(y, x, drop = TRUE, elementwise = NULL, ...)

crps.GEV(y, x, drop = TRUE, elementwise = NULL, ...)

crps.Geometric(y, x, drop = TRUE, elementwise = NULL, ...)

crps.Gumbel(y, x, drop = TRUE, elementwise = NULL, ...)

crps.HyperGeometric(y, x, drop = TRUE, elementwise = NULL, ...)

crps.Logistic(y, x, drop = TRUE, elementwise = NULL, ...)

crps.LogNormal(y, x, drop = TRUE, elementwise = NULL, ...)

crps.NegativeBinomial(y, x, drop = TRUE, elementwise = NULL, ...)

crps.Normal(y, x, drop = TRUE, elementwise = NULL, ...)

crps.Poisson(y, x, drop = TRUE, elementwise = NULL, ...)

crps.StudentsT(y, x, drop = TRUE, elementwise = NULL, ...)

crps.Uniform(y, x, drop = TRUE, elementwise = NULL, ...)

crps.distribution(
  y,
  x,
  drop = TRUE,
  elementwise = NULL,
  m = 500,
  batchsize = 10000,
  applyfun = NULL,
  cores = NULL,
  ...
)
}
\arguments{
\item{y}{A distribution object, e.g., as created by
\code{\link[distributions3]{Normal}} or \code{\link[distributions3]{Binomial}}.}

\item{x}{A vector of elements whose CRPS should be determined given the
distribution \code{y}.}

\item{drop}{logical. Should the result be simplified to a vector if possible?}

\item{elementwise}{logical. Should each distribution in \code{y} be evaluated
at all elements of \code{x} (\code{elementwise = FALSE}, yielding a matrix)?
Or, if \code{y} and \code{x} have the same length, should the evaluation be
done element by element (\code{elementwise = TRUE}, yielding a vector)? The
default of \code{NULL} means that \code{elementwise = TRUE} is used if the
lengths match and otherwise \code{elementwise = FALSE} is used.}

\item{...}{Currently not used.}

\item{m}{positive size of the grid used to approximate the CDF for
the numerical calculation of the CRPS.}

\item{batchsize}{maximum batch size. Used to split the input into batches.
Lower values reduce required memory but may increase computation time.}

\item{applyfun}{\code{NULL} or a suitable apply function. If \code{NULL},
\code{\link[base]{lapply}} is used. If set, parallelization is not possible anymore.}

\item{cores}{\code{NULL} or positive integer, number of cores for parallelization.}
}
\value{
In case of a single distribution object, either a numeric
  vector of \code{length(x)} (if \code{drop = TRUE}, default) or a matrix with
  \code{length(x)} columns (if \code{drop = FALSE}). In case of a vectorized distribution
  object, a matrix with \code{length(x)} columns containing all possible combinations.
}
\description{
Methods to the \code{\link[scoringRules]{crps}} generic function from
the \pkg{scoringRules} package for evaluating the (continuous) ranked probability
score (CRPS) of many distribution objects from the \pkg{distributions3} package.
}
\details{
Methods for most univariate distributions are provided for which \pkg{scoringRules}
provides a CRPS function \emph{and} \pkg{distributions3} provides a distribution
object. For example, the \code{crps} method for \code{Normal} objects simply
leverages \code{\link[scoringRules]{crps_norm}} for objects of class
\code{\link[distributions3]{Normal}}.

For univariate distributions where \pkg{distributions3} provides
a distribution object but \pkg{scoringRules} does not offer a CRPS function,
a numeric approximation is used. \code{\link[topmodels]{crps.distribution}};
see section 'Numeric approximation' for more information.

The argument \code{cores} can be used to enable parallelization. When used, \code{y}
is split into \code{B} equidistant batches; at least \code{B = cores} batches or
a multiple of \code{cores} with a maximum size of \code{batchsize}. On systems running
MS Windows \code{parlapply} is used, else \code{mclapply} if \code{applyfun = NULL}.
Note that parallelization is ignored if a custom \code{applyfun} has been specified.
}
\section{Numeric approximation}{

The numerical approximation/numerical integration to calculate the CRPS
supports continuous, discrete, and mixed distributions.

For continuous and mixed distributions, an equidistant grid of \code{m + 5}
probabilities is drawn for which the corresponding quantiles for each
distribution \code{y} is calculated (includes the observation itself). The
calculation of the CRPS is done using trapezodial approximation for the
numeric integration.  For discrete distributions \code{m} quantiles are
drawn and the corresponding probabilities calculated for each distribution
\code{y} (includes the observation itself) and the CRPS calculated using
numeric integration.  If a grid of size \code{m} is not sufficient to cover
the required range, the method falls back to the procedure used for
continuous distributions to approximate the CRPS.

The numeric approximation requires to set up a matrix of dimension
\code{length(y) * (m + 5)} (or \code{length(y) * (m + 1)}) which is very
memory intensive. Thus, the data is split into equidistant batches with a
maximal size of \code{batchsize}, limiting the size of the matrix to a
maximum of \code{batchsize * (m + 5)}. A smaller value of \code{batchsize}
will reduce memory footprint but will slightly increase computation time.

The error (deviation between numerical approximation and analytic solution)
has been shown to be in the order of \code{1e-2} for a series of distributions
tested. Accuracy can be increased by increasing \code{m} and will be lower
for a smaller \code{m}.
}

\examples{
\dontshow{ if(!requireNamespace("distributions3")) {
  if(interactive() || is.na(Sys.getenv("_R_CHECK_PACKAGE_NAME_", NA))) {
    stop("not all packages required for the example are installed")
  } else q() }
}
set.seed(6020)

## three normal distributions X and observations x
library("distributions3")
X <- Normal(mu = c(0, 1, 2), sigma = c(2, 1, 1))
x <- c(0, 0, 1)

## evaluate crps using infrastructure from scoringRules
library("scoringRules")
crps(X, x)

## analogously for Poisson distribution
Y <- Poisson(c(0.5, 1, 2))
crps(Y, x)
}
